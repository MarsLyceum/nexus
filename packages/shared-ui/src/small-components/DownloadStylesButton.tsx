import React, { useCallback } from 'react';

export const DownloadStylesButton: React.FC = () => {
    const handleDownload = useCallback((): void => {
        // Iterate through document.styleSheets to capture all CSS rules,
        // including those generated by CSS‑in‑JS libraries.
        let css = '';
        for (let i = 0; i < document.styleSheets.length; i++) {
            try {
                const sheet = document.styleSheets[i];
                const rules = sheet.cssRules;
                if (rules) {
                    for (let j = 0; j < rules.length; j++) {
                        css += rules[j].cssText + '\n';
                    }
                }
            } catch (error) {
                console.error(
                    `Could not access cssRules for sheet at index ${i}:`,
                    error
                );
            }
        }

        // Create a Blob from the aggregated CSS and generate a URL.
        const blob = new Blob([css], { type: 'text/css' });
        const url = URL.createObjectURL(blob);

        // Create a temporary <a> element, set the download attribute,
        // and trigger a click to download the CSS file.
        const link = document.createElement('a');
        link.href = url;
        link.download = 'rnw.css';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
    }, []);

    return <button onClick={handleDownload}>Download RN‑Web CSS</button>;
};
